---
title: "Environments"
number-sections: true
---

## Working environment

### Folder structure

Before you start a lab, you should always first create a new folder on your machine with the name of the lab (e.g. `clustering`). Usually we also create some subdirectories like "code" and "data".

Here, we create a parent directory called "labs" where we can store the different labs. Below is a tutorial on how to create a new folder called "labs" using the command line interface for both Windows and macOS.

#### Windows

1. Press `Windows + R` keys simultaneously to open the Run dialog.
2. Type `cmd` and press `Enter` to open the Command Prompt.
3. Navigate to the directory where you want to create the new folder using the `cd` (change directory) command.
   
For example (replace `YourUsername` and `\your\path`):

```bash
cd C:\Users\YourUsername\your\path
```

4. Once you are in the desired directory, create a new folder named "labs" using the following command:

```bash
mkdir labs
```

#### macOS/Linux

1. Open the Terminal application. You can find it in the Applications > Utilities folder or search for it using Spotlight.
2. Navigate to the directory where you want to create the new folder using the cd (change directory) command.

For example For example (replace `YourUsername` and `/your/path`):

```bash
cd /Users/YourUsername/your/path
```

3. Once you are in the desired directory, create a new folder named "labs" using the following command:

```bash
mkdir labs
```


## Create OpenAI API Key

If you need access to models from OpenAI, proceed as follows:

- Go to the [OpenAI website](https://openai.com/api/) and create an account
- If you login to your account, choose the *API* menu
- Click on the name of your account at the top right corner of the page
- Select "View API Keys"
- Choose: "Create new secret key"
- Copy this key and use it in an environment file (see @sec-envfile)


## Environment file {#sec-envfile}

In some labs we need to access a database or an API. Since we do not want to include passwords and API-keys in our Python scripts, we need to create an environment ("env") file. A `.env` file is a simple configuration file where environment-specific settings, such as database credentials or API keys, are stored in key-value pairs. 

By separating these settings from the main application code, we can ensure that sensitive or environment-specific information is both easily configurable and not inadvertently shared or published. The `.` before a filename serves a specific purpose in many operating systems: A filename that starts with a `.` is considered a "hidden" file. 

:::{.callout-note}
We will use libraries like [python-dotenv](https://pypi.org/project/python-dotenv/) to load the variables from the file into our Python script automatically.
:::

Below are tutorials on how to create a `.env` file.

#### macOS

1. [Download the `env` file template](/.env) 
2. Open Finder and navigate to the "Downloads" folder 
3. Move the file in your "labs" folder (in the same folder as the Jupyter Notebook).
4. Open the file and replace the relevant placeholder (e.g. `YOUR-PASSWORD`). 
5. Save the changes.
6. Rename the file from `env` to `.env` (this will hide the file)
7. To view hidden files, you need to press the "Command" + "Shift" + "." (period) keys at the same time. The hidden files will show up as translucent in the folder.
8. If you want to obscure the files again, press the same "Command" + "Shift" + "." (period) combination.


#### Windows 10

1. [Download the `env` file template](/.env) 
2. Open File Explorer from the taskbar. 
3. Move the file in your "labs" folder (in the same folder as the Jupyter Notebook).
4. Open the file and replace the relevant placeholder (e.g. `YOUR-PASSWORD`).
5. Save the changes.
6. Rename the file from `env` to `.env` (this will hide the file)
7. To view the hidden file: Select View > Options > Change folder and search options.
8. Select the View tab and, in Advanced settings, select Show hidden files, folders, and drives and OK.

#### Windows 11

1. [Download the `env` file template](/.env) 
2. Open File Explorer from the taskbar. 
3. Move the file in your "labs" folder (in the same folder as the Jupyter Notebook).
4. Open the file and replace the relevant placeholder (e.g. `YOUR-PASSWORD`).
5. Save the changes.
6. Rename the file from `env` to `.env` (this will hide the file)
7. To view the hidden file: Select View > Show > Hidden items.



## Anaconda environment

After you have installed and updated Anaconda (see [these instructions](/python.qmd)), you can install the modules you need for a specific lab in a new environment. 


::: {.callout-important}
## To do
- Go to [GitHub course environments](https://github.com/kirenz/environments)

- Follow the instructions in the GitHub repo and install the environment `env-lab` 
:::