[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "This section contains an overview about the programming toolkit you will need for our labs.\nYou will need to:\nPlease read all the instructions and complete the tasks listed in the following two sections (“Fundamentals” and “Tools”)."
  },
  {
    "objectID": "resources.html#fundamentals",
    "href": "resources.html#fundamentals",
    "title": "Resources",
    "section": "Fundamentals",
    "text": "Fundamentals\n\nSQL\nSQL (Structured Query Language) is a standardized programming language specifically used for managing and manipulating relational databases.\nThrough SQL, users can create, retrieve, update, and delete data, as well as design and manage database structures. Widely adopted across various database systems, SQL serves as the foundation for many modern data operations and applications.\n\n\nPython\nPython is an object-oriented language (an object is an entity that contains data along with associated metadata and/or functionality).\nOne thing that distinguishes Python from many other programming languages is that it is interpreted rather than compiled. This means that it is executed line by line which is particular useful for data analysis, as well as the creation of interactive, executable documents like Jupyter Notebooks.\n\n\n\n\n\n\nTip\n\n\n\nPython is an interpreted language. The Python interpreter runs a program by executing one statement at a time.\n\n\nOn top of this, there is a broad ecosystem of third-party tools and modules (like Jupyter Notebook) that offer more specialized data science functionality.\n\n\nJupyter Notebook\nJupyter Notebook is an open-source application that allows you to create and share documents that contain code, equations, visualizations and narrative text.\n\njfhzfpu ../_static/img/jupyter.png :alt: jupyter :class: bg-primary mb-1 :width: 300px :align: center\n\nA notebook is basically a list of cells and the cells contain either\n\nexplanatory text (written in markdown)\nexecutable code\ncode output\n\nNote that we will use Jupyter Notebook inside the coding editor Visual Studio Code or Google Colab.\n\n\nColab\nColaboratory, or “Colab” for short, is a free to use product from Google Research. Colab allows anybody to write and execute python code through the browser, and is especially well suited to perform data analysis and machine learning.\n\n\n\n\n\n\nTip\n\n\n\nColab is a free Jupyter notebook environment that requires no setup, and runs entirely on the Cloud.\n\n\nWatch this video to get a first impression of Colab:\n\n\nLet`s start your first Colab notebook to get an overview about some basic features:\n\n\n\n\n\n\nTo do\n\n\n\n\nColab basic features overview\n\n\n\n\n\nMarkdown\nMarkdown is one of the world’s most popular markup languages used in data science. Jupyter Notebooks use Markdown to provide an unified authoring framework for data science, combining code, its results, and commentary in Markdown.\n\n\n\n\n\n\nTip\n\n\n\nMarkdown is a simple way to format text that looks great on any device.\n\n\nReview this sites to learn more about Markdown:\n\n\n\n\n\n\nTo do\n\n\n\n\nInteractive Colab Markdown guide\nInteractive 10 minute Markdown tutorial"
  },
  {
    "objectID": "resources.html#sec-tools",
    "href": "resources.html#sec-tools",
    "title": "Resources",
    "section": "Tools",
    "text": "Tools\n\nSQL\n\nMySQL\nMySQL (pronounced “My S-Q-L” or sometimes “My Sequel”) is a powerful open-source relational database management system (RDBMS). It uses a structured query language (SQL) to manage, manipulate, and retrieve data stored in relational databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL (select “No thanks, just start my download”)\n\nWindows\nMac\n\n\n\n\n\n\nMySQL Workbench\nMySQL Workbench is a unified visual tool for database architects, developers, and DBAs. It provides features like data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, and much more. Essentially, it’s a one-stop-shop for managing and working with MySQL databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL Workbench\n\n\n\n\n\nCreate a Database\nUse MySQL Workbench to create a new database called db_data\nDROP DATABASE IF EXISTS `db_data`;\nCREATE DATABASE `db_data`; \nUSE `db_data`;\n\n\n\nAnaconda\n\nBasics\nThe open-source Anaconda Distribution is one of the easiest ways to get started with data science projects. It already includes Python and the most important data science modules.\n\n\n\n\n\n\nTip\n\n\n\nAnaconda is a data science toolkit which already includes most of the data science modules we need.\n\n\nAnaconda’s package manager conda makes it easy to manage multiple data environments that can be maintained and run separately without interference from each other (in so called virtual environments). conda analyses the current environment including everything currently installed, and, together with any version limitations specified (e.g. the user may wish to have TensorFlow version 2,0 or higher), works out how to install a compatible set of dependencies, and shows a warning if this cannot be done. Instead of conda, you can also use pip (the standard package installer for Python) to install packages. Note that you should only use either conda or pip in one environment (we usually use pip).\n\n\nIf you already have it\nIf you already have Anaconda on your machine, make sure that you use the latest version (in our course, we use Python 3.11). In your terminal, type python --version to see which Python version you are using in your Anaconda base environment.\nYou may also uninstall your current Anaconda environment from your machine and install the latest version: here a guide of how to uninstall Anaconda.\n\n\nInstallation\nInstall the latest version of the Anaconda Distribution:\n\n\n\n\n\n\nTo do\n\n\n\n\nAnaconda installation\n\n\n\nAfter you have installed Anaconda, you can update it. The following commands will update all packages in the default “base” environment to the latest version but will not update Python:\n\n\n\n\n\n\nTo do\n\n\n\n\nOn Windows open the Start menu and open an “Anaconda Command Prompt”.\nOn macOS or Linux open a terminal window.\nIn your terminal, type: conda update --all\n\n\n\nNow follow the steps described in the next section.\n\n\nAnaconda environment\nAfter you have installed and updated Anaconda, you can install the modules you need for a specific lab in a new environment.\n\n\n\n\n\n\nTo do\n\n\n\n\nGo to GitHub course environments\nInstall the course environment stated in your lab\n\n\n\n\n\n\nWorking environment\n\nFolder\nBefore you start a lab, you should always first create a new folder on your machine with the name of the lab (e.g. clustering).\n\n\nEnvironment file\nIn most labs we need access to a database or an API. Since we do not want to include passwords and API-keys in our Python scripts, we need to create an environment (“env”) file.\nAn .env file is a simple configuration file where environment-specific settings, such as database credentials or API keys, are stored in key-value pairs. By separating these settings from the main application code, we can ensure that sensitive or environment-specific information is both easily configurable and not inadvertently shared or published.\nWe will use libraries like python-dotenv to load the variables from the file into our Python script automatically.\n\n\nenv file in MacOS\n\nDownload the env file\nOpen Finder and navigate to the Downloads folder\nMove the file in your lab folder.\nOpen the file and replace the relevant placeholder (e.g. YOUR-PASSWORD) with your password or API-key.\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view hidden files, you need to press the “Command” + “Shift” + “.” (period) keys at the same time. The hidden files will show up as translucent in the folder.\nIf you want to obscure the files again, press the same “Command” + “Shift” + “.” (period) combination.\n\n\n\nenv file in Windows 10\n\nDownload the env file\nOpen File Explorer from the taskbar.\nMove the file in your lab folder.\nOpen the file and replace the relevant placeholder (e.g. YOUR-PASSWORD) with your password or API-key.\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Options &gt; Change folder and search options.\nSelect the View tab and, in Advanced settings, select Show hidden files, folders, and drives and OK.\n\n\n\nenv file in Windows 11\n\nDownload the env file\nOpen File Explorer from the taskbar.\nOpen the file and replace the relevant placeholder (e.g. YOUR-PASSWORD) with your password or API-key.\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Show &gt; Hidden items.\n\n\n\n\n\nVisual Studio Code\n\nBasics\nVisual Studio Code (also called Code) is a powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with a rich ecosystem of extensions for Python.\n\n\n\n\n\n\nTip\n\n\n\nVisual Studio Code is a code editor that can be used with a variety of programming languages including Python.\n\n\n\n\n\n\n\n\nInstallation\nInstall VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall Code\n\n\n\n\n\nInstall extensions\nThe features that Visual Studio Code includes out-of-the-box are just the start. VS Code extensions let you add languages, debuggers, and tools to your installation to support your development workflow.\nLet’s install some important extensions:\n\n\n\n\n\n\nTo do\n\n\n\n\nVisual Studio Code Extensions\n\n\n\n\n\nJupyter Notebooks\nWe usually work with Jupyter Notebook files in VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nHow to use Jupyter Notebooks in VS Code\n\n\n\n\n\nOptional tutorials\nHere some resources to get familiar with VS Code:\n\nTake a look at the intro videos\nData Science in VS Code tutorial\nPro tips: 25 VS Code Productivity Tips and Speed Hacks\n\n\n\n\n\nGit and GitHub\nGitHub is a provider of internet hosting for software development and version control using Git. We will use GitHub as a platform for web hosting and collaboration.\n\n\n\n\n\n\nTip\n\n\n\nGit is a version control system – like the “Track Changes” features from Microsoft Word with many more additional features.\n\n\n\nGit can be used to store content \nCode can be changed and other developers can add code in parallel.\nGit has a remote repository which is stored in a server and a local repository which is stored in the computer of each developer.\n\n\n\n\n\nYou need a free GitHub-account for our course. Please follow the instructions below (in case you already have a GitHub account: please add your HdM-email address to your account):\n\n\n\n\n\n\nTo do\n\n\n\n\nCreate a GitHub account with your HdM-email\nVerify your GitHub email\nYou may also sign up fot the free student developer pack\n\nInstall the VS Code GitHub extension\nInstall GitHub desktop to synchronize your machine with GitHub"
  },
  {
    "objectID": "resources.html#optional",
    "href": "resources.html#optional",
    "title": "Resources",
    "section": "Optional",
    "text": "Optional"
  },
  {
    "objectID": "resources.html#helpful",
    "href": "resources.html#helpful",
    "title": "Resources",
    "section": "Helpful",
    "text": "Helpful\n\nStackoverflow\nStackoverflow is a public platform with a massive collection of coding questions & answers. So whenever you run into issues with your code, Stackoverlow is a great place to find answers!\n\n\n\n\n\n\nTip\n\n\n\nA community-based space to find and contribute answers to technical challenges.\n\n\nThe website serves as a platform for users to ask and answer questions, and, through membership and active participation, to vote questions and answers up or down similar to Reddit and edit questions and answers in a fashion similar to a wiki.\n\n\nCommand-line interface\nOperating systems like Windows and macOS implement a command-line interface (other names for the command line are: cmd, CLI, prompt, console or terminal) in a shell for interactive access to operating system functions or services.\n\n\n\n\n\n\nTip\n\n\n\nA command-line interface (CLI) processes commands to a computer program in the form of lines of text.\n\n\nWe sometimes use the command line interface so you should be familiar with basic commands. If you aren’t familiar with the terminal, read this short introduction to the command-line interface:\n\n\n\n\n\n\nTo do\n\n\n\n\nIntroduction to the command-line interface\n\n\n\nHere is a summary of some useful commands:\n\n\n\n\n\n\n\n\n\nCommand (Windows)\nCommand (Mac OS / Linux)\nDescription\nExample\n\n\n\n\nexit\nexit\nclose the window\nexit\n\n\ncd\ncd\nchange directory\ncd test, cd.. (Windows) or cd .. (Mac)\n\n\ncd\npwd\nshow the current directory\ncd (Windows) or pwd (Mac OS / Linux)\n\n\ndir\nls\nlist directories/files\ndir\n\n\ncopy\ncp\ncopy file\ncopy c:.txt c:.txt\n\n\nmove\nmv\nmove file\nmove c:.txt c:.txt\n\n\nmkdir\nmkdir\ncreate a new directory\nmkdir testdirectory\n\n\nrmdir (or del)\nrm\ndelete a file\ndel c:.txt\n\n\nrmdir /S\nrm -r\ndelete a directory\nrm -r testdirectory\n\n\n[CMD] /?\nman [CMD]\nget help for a command\ncd /? (Windows) or man cd (Mac OS / Linux)"
  },
  {
    "objectID": "resources.html#stay-up-to-data",
    "href": "resources.html#stay-up-to-data",
    "title": "Resources",
    "section": "Stay up to data",
    "text": "Stay up to data\nTo stay up to date in Data Science, take a look at these two free weekly newsletters featuring curated news, articles and jobs related to Data Science:\n\nData science weekly\nData Elixir"
  },
  {
    "objectID": "code/notebook.html",
    "href": "code/notebook.html",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#setup",
    "href": "code/notebook.html#setup",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#data",
    "href": "code/notebook.html#data",
    "title": "Notebook",
    "section": "Data",
    "text": "Data"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab",
    "section": "",
    "text": "Welcome to this lab!\n\nAssignemnts"
  },
  {
    "objectID": "slide.html",
    "href": "slide.html",
    "title": "Slides",
    "section": "",
    "text": "This is a Quarto slidedeck."
  },
  {
    "objectID": "slides/slides.html#text",
    "href": "slides/slides.html#text",
    "title": "Title",
    "section": "Text",
    "text": "Text\n\na 🤖\n\nabc\n\n\n\n\nb\nc1\n\n📚 Required reading: A & B (2023)\nhttps://arxiv.org/pdf/2303.12712.pdf\n\nRussell & Norvig, 2009"
  },
  {
    "objectID": "slides/slides.html#image",
    "href": "slides/slides.html#image",
    "title": "Title",
    "section": "Image",
    "text": "Image"
  },
  {
    "objectID": "slides/slides.html#video",
    "href": "slides/slides.html#video",
    "title": "Title",
    "section": "Video",
    "text": "Video"
  },
  {
    "objectID": "slides/slides.html#a-lot-of-text",
    "href": "slides/slides.html#a-lot-of-text",
    "title": "Title",
    "section": "A lot of text",
    "text": "A lot of text\nSmaller heading"
  },
  {
    "objectID": "slides/slides.html#background-image",
    "href": "slides/slides.html#background-image",
    "title": "Title",
    "section": "Background image",
    "text": "Background image\nabc"
  },
  {
    "objectID": "slides/slides.html#code",
    "href": "slides/slides.html#code",
    "title": "Title",
    "section": "Code",
    "text": "Code\n1print('Hello World')\n2for i in LIST:\n  df[i] = df[i].astype('cat')\n\n1\n\nPrint Hello World, and then,\n\n2\n\ntransform all columns in the LIST element to categorical variables"
  },
  {
    "objectID": "slides/slides.html#end",
    "href": "slides/slides.html#end",
    "title": "Title",
    "section": "End",
    "text": "End\n\n\nJan Kirenz"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "This is a Quarto slidedeck."
  }
]