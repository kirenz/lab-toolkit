[
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "This is a Quarto slidedeck."
  },
  {
    "objectID": "slide.html",
    "href": "slide.html",
    "title": "Slides",
    "section": "",
    "text": "1 Basics\nMost of the slides are made with the open source scientific and technical publishing system Quarto and reveal.js.\nreveal.js is an open source HTML presentation framework. It‚Äôs a tool that enables anyone with a web browser to create fully-featured presentations for free. Presentations made with reveal.js are built on open web technologies. That means anything you can do on the web, you can do in your presentation.\n\n\n2 Slides tutorial\nRead the tutorial below to learn how to\n\nNavigate through the slides\nShow all slides\nSave slides as PDF\nPrint slides\n\n\n\n\n\n\n\nTo do\n\n\n\n\nüñ•Ô∏è Slides tutorial"
  },
  {
    "objectID": "github.html#git",
    "href": "github.html#git",
    "title": "GitHub",
    "section": "1.1 Git",
    "text": "1.1 Git\nGit is a version control system ‚Äì like the ‚ÄúTrack Changes‚Äù features from Microsoft Word with many more additional features:\n\nGit can be used to store content‚Ää\nCode can be changed and other developers can add code in parallel.\nGit has a remote repository which is stored in a server and a local repository which is stored in the computer of each developer.\n\n\n\n\n\n\n\nTo do\n\n\n\nCheck if you have Git on your machine (see instructions below)\n\n\nWe need Git for our course. To see if Git is already installed on your machine, you can go in the command line (on Windows), or in the terminal (on Mac) and type this command:\ngit --version\nIf you don‚Äôt see the version, you need to install Git\n\nüíæ Mac: Option 1: you can install Apple‚Äôs XCode, which includes Git. Option 2: Only install Git (in that case I recommend to use [homebrew(https://brew.sh/)])\nüíæ Windows: Install Git. Follow these instructions\n\n\n\n\n\n\n\nNote\n\n\n\nLearn about Git with ‚ÄúLearn Git Branching‚Äù, the most visual and interactive way to learn Git on the web"
  },
  {
    "objectID": "cli.html",
    "href": "cli.html",
    "title": "Command-line",
    "section": "",
    "text": "1 Basics\nOperating systems like Windows and macOS implement a command-line interface (other names for the command line are: cmd, CLI, prompt, console or terminal) in a shell for interactive access to operating system functions or services.\nWe sometimes use the command line interface so you should be familiar with bsaic commands.\n\n\n\n\n\n\nTip\n\n\n\nA command-line interface (CLI) processes commands to a computer program in the form of lines of text.\n\n\nIf you aren‚Äôt familiar with the command line, read this short introduction to the command-line interface:\n\n\n\n\n\n\nTo do\n\n\n\n\nIntroduction to the command-line interface\n\n\n\n\n\n2 Useful commands\nHere is a summary of some useful commands:\n\n\n\n\n\n\n\n\n\nCommand (Windows)\nCommand (Mac OS / Linux)\nDescription\nExample\n\n\n\n\nexit\nexit\nclose the window\nexit\n\n\ncd\ncd\nchange directory\ncd test, cd.. (Windows) or cd .. (Mac)\n\n\ncd\npwd\nshow the current directory\ncd (Windows) or pwd (Mac OS / Linux)\n\n\ndir\nls\nlist directories/files\ndir\n\n\ncopy\ncp\ncopy file\ncopy c:.txt c:.txt\n\n\nmove\nmv\nmove file\nmove c:.txt c:.txt\n\n\nmkdir\nmkdir\ncreate a new directory\nmkdir testdirectory\n\n\nrmdir (or del)\nrm\ndelete a file\ndel c:.txt\n\n\nrmdir /S\nrm -r\ndelete a directory\nrm -r testdirectory\n\n\n[CMD] /?\nman [CMD]\nget help for a command\ncd /? (Windows) or man cd (Mac OS / Linux)"
  },
  {
    "objectID": "sql.html",
    "href": "sql.html",
    "title": "SQL",
    "section": "",
    "text": "SQL (Structured Query Language, pronounced ‚ÄúS-Q-L‚Äù or sometimes ‚ÄúSequel‚Äù) is a standardized database language specifically used for managing and manipulating relational databases. Through SQL, users can create, retrieve, update, and delete data, as well as design and manage database structures.\nA Relational Database Management System (RDBMS) is a type of database system where data is stored in structured tables with rows and columns, facilitating complex queries and transactions. Popular open source examples include MySQL and PostgreSQL."
  },
  {
    "objectID": "sql.html#mysql-rdbms",
    "href": "sql.html#mysql-rdbms",
    "title": "SQL",
    "section": "2.1 MySQL RDBMS",
    "text": "2.1 MySQL RDBMS\nMySQL (pronounced ‚ÄúMy S-Q-L‚Äù or sometimes ‚ÄúMy Sequel‚Äù) is a powerful open-source relational database management system (RDBMS).\nIt uses a structured query language (SQL) to manage, manipulate, and retrieve data stored in relational databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL (select ‚ÄúNo thanks, just start my download‚Äù)\n\nWindows\nMac"
  },
  {
    "objectID": "sql.html#mysql-workbench",
    "href": "sql.html#mysql-workbench",
    "title": "SQL",
    "section": "2.2 MySQL Workbench",
    "text": "2.2 MySQL Workbench\nMySQL Workbench is a unified visual tool and provides features like data modeling, SQL development, and comprehensive administration tools like user administration.\nEssentially, it‚Äôs a one-stop-shop for managing and working with MySQL databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL Workbench\nCreate a new connection (use local-connection as ‚ÄúConnection Name‚Äù; click on ‚ÄúStore in Vault‚Äù and provide your password)"
  },
  {
    "objectID": "sql.html#create-a-database",
    "href": "sql.html#create-a-database",
    "title": "SQL",
    "section": "2.3 Create a Database",
    "text": "2.3 Create a Database\nUse MySQL Workbench to create a new database called db_data\n\nOpen a connection (use local-connection)\nCopy the SQL statement below and paste it into the open MySQL Query window\n\nDROP DATABASE IF EXISTS `db_data`;\nCREATE DATABASE `db_data`; \nUSE `db_data`;\n\nClick on the ‚ö° symbol to execute the script\nClick on the refresh symbol üîÉ to display the database (on the top left next to SCHEMAS)"
  },
  {
    "objectID": "sql.html#create-a-table",
    "href": "sql.html#create-a-table",
    "title": "SQL",
    "section": "2.4 Create a Table",
    "text": "2.4 Create a Table\nNext, we include a table in our database.\n\n2.4.1 Create a simple table\nWe‚Äôll begin by creating a table named campaigns that will hold data about different marketing campaigns.\n\n\n\n\n\n\nColumns in marketing campaigns table\n\n\n\n\n\n\nid: A unique identifier for each campaign.\nname: The name of the marketing campaign.\nstart_date & end_date: The time frame of the campaign.\nbudget: The budget allocated to the campaign.\nchannel: The channel used for the campaign (e.g., ‚ÄúEmail‚Äù, ‚ÄúSocial Media‚Äù, ‚ÄúTV‚Äù).\n\n\n\n\n\nOpen a new query tab (File &gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nCREATE TABLE campaigns (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10, 2),\n    channel VARCHAR(255)\n);\n\nClick on the ‚ö° symbol to execute the script\nClick on the refresh symbol üîÉ to display the database (on the top left next to SCHEMAS)\nClick on the database symbol ‚Äúdb_data‚Äù at the left sidebar below SCHEMAS\nExpand ‚ÄúTables‚Äù &gt; ‚Äúcampaigns‚Äù &gt; ‚ÄúColumns‚Äù to view the columns of the table\n\n\n\n2.4.2 Insert values into the table\nLet‚Äôs now insert some sample marketing campaigns into our table:\n\nOpen a new query tab (File &gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nINSERT INTO campaigns (name, start_date, end_date, budget, channel) VALUES\n('Winter Sale', '2023-12-01', '2023-12-31', 5000.00, 'Email'),\n('Summer Festival', '2023-06-01', '2023-06-15', 10000.00, 'Social Media'),\n('Back to School', '2023-08-01', '2023-08-20', 7500.00, 'TV');\n\nClick on the ‚ö° symbol to execute the script\n\n\n\n2.4.3 Retrieve values from the table\nAfter inserting the campaigns, you can retrieve them using a simple SELECT query. For instance:\n\nOpen a new query tab (File -&gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nSELECT * \nFROM campaigns;"
  },
  {
    "objectID": "sql.html#postgresql-rdbms",
    "href": "sql.html#postgresql-rdbms",
    "title": "SQL",
    "section": "3.1 PostgreSQL RDBMS",
    "text": "3.1 PostgreSQL RDBMS\nPostgreSQL (often pronounced ‚ÄúPost-gress-Q-L‚Äù) is an advanced, open-source relational database management system (RDBMS).\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall PostgreSQL\nDuring the installation process, select ‚ÄúPostgreSQL Server‚Äù, ‚ÄúpgAdmin4‚Äù and ‚ÄúCommand Line Tools‚Äù\nPassword: Provide a password (make sure to make a note - you can no longer change the password)\nPort: Use the suggested port\nLocale: Use [Default Locale]"
  },
  {
    "objectID": "sql.html#pgadmin4",
    "href": "sql.html#pgadmin4",
    "title": "SQL",
    "section": "3.2 PgAdmin4",
    "text": "3.2 PgAdmin4\npgAdmin4 is a popular open-source administration and management tool for the PostgreSQL relational database (it has already been installed together with PostgreSQL).\n\n3.2.1 Add New Server\nFirst, let‚Äôs create a new connection to a PostgreSQL database instance. We will call this instance local-connection.\nOnce added, this server will appear in your list of servers in pgAdmin4‚Äôs interface, allowing you to quickly connect, manage, and query that database instance.\n\nOpen pgAdmin4\nClick on Servers on the left sidebar\nSelect Add New Server (in the main window below ‚ÄúQuick Links‚Äù)\nProvide the name: local-connection\nMove to the tab Connection\n\nHost name/address: localhost\nPassword: enter the password you used during the installation process and choose ‚ÄúSave password‚Äù\n\nWe are done and you can select Save"
  },
  {
    "objectID": "sql.html#create-a-database-1",
    "href": "sql.html#create-a-database-1",
    "title": "SQL",
    "section": "3.3 Create a Database",
    "text": "3.3 Create a Database\nUse pgadmin4 to create a new database called db_data\n\nRight click on our new connection local-connection in the left sidebar and select: Create &gt; Database\nIn the tab ‚ÄúGeneral‚Äù, provide as ‚ÄúDatabase‚Äù: db_data\nWe are done and you can select Save"
  },
  {
    "objectID": "sql.html#create-a-table-1",
    "href": "sql.html#create-a-table-1",
    "title": "SQL",
    "section": "3.4 Create a Table",
    "text": "3.4 Create a Table\nNext, we include a table in our database.\n\n3.4.1 Create a simple table\nWe‚Äôll begin by creating a table named campaigns that will hold data about different marketing campaigns.\n\n\n\n\n\n\nColumns in marketing campaigns table\n\n\n\n\n\n\nid: A unique identifier for each campaign.\nname: The name of the marketing campaign.\nstart_date & end_date: The time frame of the campaign.\nbudget: The budget allocated to the campaign.\nchannel: The channel used for the campaign (e.g., ‚ÄúEmail‚Äù, ‚ÄúSocial Media‚Äù, ‚ÄúTV‚Äù).\n\n\n\n\n\nClick on the database db_data\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nCREATE TABLE campaigns (\n    id BIGSERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10, 2),\n    channel VARCHAR(255)\n);\n\nClick on the ‚ñ∂Ô∏è symbol to execute the script\nSelect the database ‚Äúdb_data‚Äù at the left sidebar and expand ‚ÄúSchemas‚Äù &gt; ‚ÄúTables‚Äù &gt; ‚Äúcampaigns‚Äù &gt; ‚ÄúColumns‚Äù to view the columns of the table\n\n\n\n3.4.2 Insert values into the table\nLet‚Äôs now insert some sample marketing campaigns into our table:\n\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nINSERT INTO campaigns (name, start_date, end_date, budget, channel) VALUES\n('Winter Sale', '2023-12-01', '2023-12-31', 5000.00, 'Email'),\n('Summer Festival', '2023-06-01', '2023-06-15', 10000.00, 'Social Media'),\n('Back to School', '2023-08-01', '2023-08-20', 7500.00, 'TV');\n\nClick on the ‚ñ∂Ô∏è symbol to execute the script\n\n\n\n3.4.3 Retrieve values from the table\nAfter inserting the campaigns, you can retrieve them using a simple SELECT query. For instance:\n\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nSELECT * \nFROM campaigns;"
  },
  {
    "objectID": "code/notebook.html",
    "href": "code/notebook.html",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#setup",
    "href": "code/notebook.html#setup",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#data",
    "href": "code/notebook.html#data",
    "title": "Notebook",
    "section": "Data",
    "text": "Data"
  },
  {
    "objectID": "python.html",
    "href": "python.html",
    "title": "Python",
    "section": "",
    "text": "Python is an object-oriented language (an object is an entity that contains data along with associated metadata and/or functionality).\nOne thing that distinguishes Python from many other programming languages is that it is interpreted rather than compiled. This means that it is executed line by line which is particular useful for data analysis, as well as the creation of interactive, executable documents like Jupyter Notebooks.\n\n\n\n\n\n\nNote\n\n\n\nPython is an interpreted language. The Python interpreter runs a program by executing one statement at a time.\n\n\nOn top of this, there is a broad ecosystem of third-party tools and modules (like Jupyter Notebook) that offer more specialized data science functionality."
  },
  {
    "objectID": "python.html#basics-1",
    "href": "python.html#basics-1",
    "title": "Python",
    "section": "6.1 Basics",
    "text": "6.1 Basics\nThe open-source Anaconda Distribution is one of the easiest ways to get started with data science projects. It already includes Python and the most important data science modules.\n\n\n\n\n\n\nNote\n\n\n\nAnaconda is a data science toolkit which already includes most of the data science modules we need.\n\n\nAnaconda‚Äôs package manager conda makes it easy to manage multiple data environments that can be maintained and run separately without interference from each other (in so called virtual environments).\n\n\n\n\n\n\nExpand to learn about conda\n\n\n\n\n\nconda analyses the current environment including everything currently installed, and, together with any version limitations specified (e.g.¬†the user may wish to have TensorFlow version 2.0 or higher), works out how to install a compatible set of dependencies, and shows a important if this cannot be done.\n\n\n\nInstead of conda, you can also use pip (the standard package installer for Python) to install packages.\nNote that you should only use either conda or pip in one environment (we usually use pip)."
  },
  {
    "objectID": "python.html#if-you-already-have-anaconda",
    "href": "python.html#if-you-already-have-anaconda",
    "title": "Python",
    "section": "6.2 If you already have Anaconda",
    "text": "6.2 If you already have Anaconda\nIf you already have Anaconda on your machine, make sure that you use the latest version (in our course, we use Python 3.11).\nIn your command line tool, type python --version to see which Python version you are using in your Anaconda base environment:\n\nOn Windows open the Start menu and open an ‚ÄúAnaconda Command Prompt‚Äù. Type python --version to see which Python version you are using in your Anaconda base environment.\nOn macOS or Linux open a terminal window. Type python --version to see which Python version you are using in your Anaconda base environment.\n\nYou may also uninstall your current Anaconda environment from your machine and install the latest version: here a guide of how to uninstall Anaconda."
  },
  {
    "objectID": "python.html#installation",
    "href": "python.html#installation",
    "title": "Python",
    "section": "6.3 Installation",
    "text": "6.3 Installation\nInstall the latest version of the Anaconda Distribution:\n\n\n\n\n\n\nTo do\n\n\n\n\nAnaconda installation\n\n\n\nAfter you have installed Anaconda, you can update it. The following commands will update all packages in the default ‚Äúbase‚Äù environment to the latest version but will not update Python:\n\n\n\n\n\n\nTo do\n\n\n\n\nOn Windows open the Start menu and open an ‚ÄúAnaconda Command Prompt‚Äù.\nOn macOS or Linux open a terminal window.\nIn your terminal, type: conda update --all\n\n\n\nNow follow the steps described in the next section."
  },
  {
    "objectID": "python.html#anaconda-environment",
    "href": "python.html#anaconda-environment",
    "title": "Python",
    "section": "6.4 Anaconda environment",
    "text": "6.4 Anaconda environment\nAfter you have installed and updated Anaconda, you can install the modules you need for a specific lab in a new environment.\n\n\n\n\n\n\nTo do\n\n\n\n\nGo to GitHub course environments\nFollow the instructions in the GitHub repo and install the environment env-lab"
  },
  {
    "objectID": "python.html#basics-2",
    "href": "python.html#basics-2",
    "title": "Python",
    "section": "7.1 Basics",
    "text": "7.1 Basics\nVisual Studio Code (also called Code) is a powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with a rich ecosystem of extensions for Python.\n\n\n\n\n\n\nNote\n\n\n\nVisual Studio Code is a code editor that can be used with a variety of programming languages including Python."
  },
  {
    "objectID": "python.html#installation-1",
    "href": "python.html#installation-1",
    "title": "Python",
    "section": "7.2 Installation",
    "text": "7.2 Installation\nInstall VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall Code"
  },
  {
    "objectID": "python.html#install-extensions",
    "href": "python.html#install-extensions",
    "title": "Python",
    "section": "7.3 Install extensions",
    "text": "7.3 Install extensions\nThe features that Visual Studio Code includes out-of-the-box are just the start. VS Code extensions let you add languages, debuggers, and tools to your installation to support your development workflow.\nLet‚Äôs install some important extensions:\n\n\n\n\n\n\nTo do\n\n\n\n\nVisual Studio Code Extensions"
  },
  {
    "objectID": "python.html#jupyter-notebooks",
    "href": "python.html#jupyter-notebooks",
    "title": "Python",
    "section": "7.4 Jupyter Notebooks",
    "text": "7.4 Jupyter Notebooks\nWe usually work with Jupyter Notebook files in VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nLearn how to use Jupyter Notebooks in VS Code\n\n\n\nTo use a specific Anaconda environment as Jupyter kernel, select the kernel (e.g.¬†lab) using the kernel picker in the top right of VS Code."
  },
  {
    "objectID": "python.html#optional-tutorials",
    "href": "python.html#optional-tutorials",
    "title": "Python",
    "section": "7.5 Optional tutorials",
    "text": "7.5 Optional tutorials\nSome resources to get familiar with VS Code:\n\nTake a look at the intro videos\nData Science in VS Code tutorial\nPro tips: 25 VS Code Productivity Tips and Speed Hacks"
  },
  {
    "objectID": "slides/slides.html#jump-to-slides",
    "href": "slides/slides.html#jump-to-slides",
    "title": "Slides",
    "section": "Jump to slides",
    "text": "Jump to slides\n\nClicking the button (or press m) opens a slide navigation menu that enables you to easily jump to any slide"
  },
  {
    "objectID": "slides/slides.html#zoom-into-slide",
    "href": "slides/slides.html#zoom-into-slide",
    "title": "Slides",
    "section": "Zoom into slide",
    "text": "Zoom into slide\n\nHold down the Alt key (or option) and click on any element to zoom towards it."
  },
  {
    "objectID": "slides/slides.html#chalkboard-and-notes-canvas",
    "href": "slides/slides.html#chalkboard-and-notes-canvas",
    "title": "Slides",
    "section": "Chalkboard and notes canvas",
    "text": "Chalkboard and notes canvas\n\nPress b to toggle the chalkboard.\nPress c to toggle the notes canvas.\n\n\n\nJan Kirenz"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome üëã",
    "section": "",
    "text": "This page contains instructions on how to set up your work environment. The content you need depends on the course you are taking.\n\n\n\n\n\n\n\nTip\n\n\n\nIf you aren‚Äôt familiar with the command line, you should first take a look at this short introduction\n\n\nThis toolkit covers how to:\n\nSet up a Python devolopment environment (we use Anaconda and Visual Studio Code)\nPrepare a working environment (create folders and ‚Äìif necessary‚Äì obtain API keys and create a .env file)\nCreate a GitHub account for software development and version control\nInstall a SQL environment with a MySQL database and MySQL Workbench\nMake yourself familiar with the slide toolkit\n\nPlease read all the relevant instructions and complete the tasks listed in the sections."
  },
  {
    "objectID": "environments.html",
    "href": "environments.html",
    "title": "Environment",
    "section": "",
    "text": "Before you start a lab, you should always first create a new folder on your machine with the name of the lab (e.g.¬†clustering). Usually we also create some subdirectories like ‚Äúcode‚Äù and ‚Äúdata‚Äù.\nHere, we create a parent directory called ‚Äúlabs‚Äù where we can store the different labs. Below is a tutorial on how to create a new folder called ‚Äúlabs‚Äù using the command line interface for both Windows and macOS.\n\n\n\nPress Windows + R keys simultaneously to open the Run dialog.\nType cmd and press Enter to open the Command Prompt.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example (replace YourUsername and \\your\\path):\ncd C:\\Users\\YourUsername\\your\\path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs\n\n\n\n\nOpen the Terminal application. You can find it in the Applications &gt; Utilities folder or search for it using Spotlight.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example For example (replace YourUsername and /your/path):\ncd /Users/YourUsername/your/path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs"
  },
  {
    "objectID": "environments.html#windows",
    "href": "environments.html#windows",
    "title": "Environment",
    "section": "",
    "text": "Press Windows + R keys simultaneously to open the Run dialog.\nType cmd and press Enter to open the Command Prompt.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example (replace YourUsername and \\your\\path):\ncd C:\\Users\\YourUsername\\your\\path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs"
  },
  {
    "objectID": "environments.html#macoslinux",
    "href": "environments.html#macoslinux",
    "title": "Environment",
    "section": "",
    "text": "Open the Terminal application. You can find it in the Applications &gt; Utilities folder or search for it using Spotlight.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example For example (replace YourUsername and /your/path):\ncd /Users/YourUsername/your/path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs"
  },
  {
    "objectID": "environments.html#create-api-key",
    "href": "environments.html#create-api-key",
    "title": "Environment",
    "section": "2.1 Create API Key",
    "text": "2.1 Create API Key\nIf you need access to services from OpenAI, proceed as follows\n\n\n\n\n\n\nTo do\n\n\n\n\nGo to the OpenAI website and create an account\nIf you log in to your account, choose the API menu\nClick on the name of your account at the top right corner of the page\nSelect ‚ÄúView API Keys‚Äù\nChoose: ‚ÄúCreate new secret key‚Äù\nCopy this key and use it in an environment file (see Section¬†4)"
  },
  {
    "objectID": "environments.html#sec-invoice",
    "href": "environments.html#sec-invoice",
    "title": "Environment",
    "section": "2.2 Invoice limit",
    "text": "2.2 Invoice limit\nDefine an upper limit for invoices so that no unexpected costs can arise:\n\n\n\n\n\n\nTo do\n\n\n\n\nGo to the and create an account\nLog in to your account and choose the API menu\nClick on the name of your account at the top right corner of the page\nSelect ‚ÄúManage Account‚Äù &gt; ‚ÄúBilling‚Äù &gt; ‚ÄúUsage Limits‚Äù\nProvide a ‚ÄúHard Limit‚Äù and ‚ÄúSoft Limit‚Äù (e.g., $10.00 and $5.00)"
  },
  {
    "objectID": "environments.html#macos",
    "href": "environments.html#macos",
    "title": "Environment",
    "section": "4.1 macOS",
    "text": "4.1 macOS\n\nDownload the env file template\nOpen Finder and navigate to the ‚ÄúDownloads‚Äù folder\nMove the file in your ‚Äúlabs‚Äù folder (in the same folder as the Jupyter Notebook).\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view hidden files, you need to press the ‚ÄúCommand‚Äù + ‚ÄúShift‚Äù + ‚Äú.‚Äù (period) keys at the same time. The hidden files will show up as translucent in the folder.\nIf you want to obscure the files again, press the same ‚ÄúCommand‚Äù + ‚ÄúShift‚Äù + ‚Äú.‚Äù (period) combination."
  },
  {
    "objectID": "environments.html#windows-10",
    "href": "environments.html#windows-10",
    "title": "Environment",
    "section": "4.2 Windows 10",
    "text": "4.2 Windows 10\n\nDownload the env file template\nOpen File Explorer from the taskbar.\nMove the file in your ‚Äúlabs‚Äù folder (in the same folder as the Jupyter Notebook).\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Options &gt; Change folder and search options.\nSelect the View tab and, in Advanced settings, select Show hidden files, folders, and drives and OK."
  },
  {
    "objectID": "environments.html#windows-11",
    "href": "environments.html#windows-11",
    "title": "Environment",
    "section": "4.3 Windows 11",
    "text": "4.3 Windows 11\n\nDownload the env file template\nOpen File Explorer from the taskbar.\nMove the file in your ‚Äúlabs‚Äù folder (in the same folder as the Jupyter Notebook).\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Show &gt; Hidden items."
  }
]