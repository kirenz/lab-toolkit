[
  {
    "objectID": "slide.html",
    "href": "slide.html",
    "title": "Slides",
    "section": "",
    "text": "Most of the slides are made with the open source solutions Quarto (scientific and technical publishing system) and Revealjs (HTML presentation framework).\n\n\n\n\n\n\nTo do\n\n\n\n\nRead this tutorial to learn how to\n\nNavigate through the slides\nShow all slides\nSave slides as PDF\nPrint slides"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome üëã",
    "section": "",
    "text": "This tutorial contains instructions about the programming toolkit you will need for our course.\n\n\n\n\n\n\n\nTip\n\n\n\nIf you aren‚Äôt familiar with the command line, you should first take a look at this short introduction\n\n\nYou will need to set up a:\n\nSQL environment with a MySQL database and MySQL Workbench\nPython devolopment environemnt (we use Anaconda and Visual Studio Code)\nGitHub account for software development and version control)\n\nPlease read all the instructions and complete the tasks listed in the sections."
  },
  {
    "objectID": "code/notebook.html",
    "href": "code/notebook.html",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#setup",
    "href": "code/notebook.html#setup",
    "title": "Notebook",
    "section": "",
    "text": "Load Python libaries and API keys.\n\nimport os\nimport openai\nimport pandas as pd\nimport altair as alt\nfrom dotenv import load_dotenv, find_dotenv\n\n\n_ = load_dotenv(find_dotenv()) # read local .env file\nopenai.api_key  = os.environ['OPENAI_API_KEY']"
  },
  {
    "objectID": "code/notebook.html#data",
    "href": "code/notebook.html#data",
    "title": "Notebook",
    "section": "Data",
    "text": "Data"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "This is a Quarto slidedeck."
  },
  {
    "objectID": "github.html",
    "href": "github.html",
    "title": "GitHub",
    "section": "",
    "text": "GitHub is a provider of internet hosting for software development and version control using Git.\n\n\n\n\n\n\nNote\n\n\n\nWe will use GitHub as a platform for web hosting and collaboration.\n\n\nGit is a version control system ‚Äì like the ‚ÄúTrack Changes‚Äù features from Microsoft Word with many more additional features.\n\nGit can be used to store content‚Ää\nCode can be changed and other developers can add code in parallel.\nGit has a remote repository which is stored in a server and a local repository which is stored in the computer of each developer."
  },
  {
    "objectID": "github.html#basics",
    "href": "github.html#basics",
    "title": "GitHub",
    "section": "",
    "text": "GitHub is a provider of internet hosting for software development and version control using Git.\n\n\n\n\n\n\nNote\n\n\n\nWe will use GitHub as a platform for web hosting and collaboration.\n\n\nGit is a version control system ‚Äì like the ‚ÄúTrack Changes‚Äù features from Microsoft Word with many more additional features.\n\nGit can be used to store content‚Ää\nCode can be changed and other developers can add code in parallel.\nGit has a remote repository which is stored in a server and a local repository which is stored in the computer of each developer."
  },
  {
    "objectID": "github.html#github-account",
    "href": "github.html#github-account",
    "title": "GitHub",
    "section": "GitHub-account",
    "text": "GitHub-account\nYou need a free GitHub-account for our course. Please follow the instructions below (in case you already have a GitHub account: please add your HdM-email address to your account):\n\n\n\n\n\n\nTo do\n\n\n\n\nCreate a GitHub account with your HdM-email\nVerify your GitHub email\nYou may also sign up fot the free student developer pack\n\nInstall the VS Code GitHub extension\nInstall GitHub desktop to synchronize your machine with GitHub\n\n\n\nNext, learn how to set up, authenticate, and configure GitHub Desktop to allow you to contribute to projects directly from your machine.\n\n\n\n\n\n\nTo do\n\n\n\n\nGetting started with GitHub Desktop"
  },
  {
    "objectID": "sql.html",
    "href": "sql.html",
    "title": "SQL",
    "section": "",
    "text": "SQL (Structured Query Language, pronounced ‚ÄúS-Q-L‚Äù or sometimes ‚ÄúSequel‚Äù) is a standardized database language specifically used for managing and manipulating relational databases. Through SQL, users can create, retrieve, update, and delete data, as well as design and manage database structures.\nA Relational Database Management System (RDBMS) is a type of database system where data is stored in structured tables with rows and columns, facilitating complex queries and transactions. Popular open source examples include MySQL and PostgreSQL."
  },
  {
    "objectID": "sql.html#basics",
    "href": "sql.html#basics",
    "title": "SQL",
    "section": "",
    "text": "SQL (Structured Query Language, pronounced ‚ÄúS-Q-L‚Äù or sometimes ‚ÄúSequel‚Äù) is a standardized database language specifically used for managing and manipulating relational databases. Through SQL, users can create, retrieve, update, and delete data, as well as design and manage database structures.\nA Relational Database Management System (RDBMS) is a type of database system where data is stored in structured tables with rows and columns, facilitating complex queries and transactions. Popular open source examples include MySQL and PostgreSQL."
  },
  {
    "objectID": "sql.html#mysql",
    "href": "sql.html#mysql",
    "title": "SQL",
    "section": "MySQL",
    "text": "MySQL\nMySQL (pronounced ‚ÄúMy S-Q-L‚Äù or sometimes ‚ÄúMy Sequel‚Äù) is a powerful open-source relational database management system (RDBMS).\nIt uses a structured query language (SQL) to manage, manipulate, and retrieve data stored in relational databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL (select ‚ÄúNo thanks, just start my download‚Äù)\n\nWindows\nMac\n\n\n\n\n\nMySQL Workbench\nMySQL Workbench is a unified visual tool and provides features like data modeling, SQL development, and comprehensive administration tools like user administration.\nEssentially, it‚Äôs a one-stop-shop for managing and working with MySQL databases.\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall MySQL Workbench\nCreate a new connection (use local-connection as ‚ÄúConnection Name‚Äù; click on ‚ÄúStore in Vault‚Äù and provide your password)\n\n\n\n\n\nCreate a Database\nUse MySQL Workbench to create a new database called db_data\n\nOpen a connection (use local-connection)\nCopy the SQL statement below and paste it into the open MySQL Query window\n\nDROP DATABASE IF EXISTS `db_data`;\nCREATE DATABASE `db_data`; \nUSE `db_data`;\n\nClick on the ‚ö° symbol to execute the script\nClick on the refresh symbol üîÉ to display the database (on the top left next to SCHEMAS)\n\n\n\nCreate a Table\nNext, we include a table in our database.\n\nCreate a simple table\nWe‚Äôll begin by creating a table named campaigns that will hold data about different marketing campaigns.\n\n\n\n\n\n\nColumns in marketing campaigns table\n\n\n\n\n\n\nid: A unique identifier for each campaign.\nname: The name of the marketing campaign.\nstart_date & end_date: The time frame of the campaign.\nbudget: The budget allocated to the campaign.\nchannel: The channel used for the campaign (e.g., ‚ÄúEmail‚Äù, ‚ÄúSocial Media‚Äù, ‚ÄúTV‚Äù).\n\n\n\n\n\nOpen a new query tab (File &gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nCREATE TABLE campaigns (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10, 2),\n    channel VARCHAR(255)\n);\n\nClick on the ‚ö° symbol to execute the script\nClick on the refresh symbol üîÉ to display the database (on the top left next to SCHEMAS)\nClick on the database symbol ‚Äúdb_data‚Äù at the left sidebar below SCHEMAS\nExpand ‚ÄúTables‚Äù &gt; ‚Äúcampaigns‚Äù &gt; ‚ÄúColumns‚Äù to view the columns of the table\n\n\n\nInsert values into the table\nLet‚Äôs now insert some sample marketing campaigns into our table:\n\nOpen a new query tab (File &gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nINSERT INTO campaigns (name, start_date, end_date, budget, channel) VALUES\n('Winter Sale', '2023-12-01', '2023-12-31', 5000.00, 'Email'),\n('Summer Festival', '2023-06-01', '2023-06-15', 10000.00, 'Social Media'),\n('Back to School', '2023-08-01', '2023-08-20', 7500.00, 'TV');\n\nClick on the ‚ö° symbol to execute the script\n\n\n\nRetrieve values from the table\nAfter inserting the campaigns, you can retrieve them using a simple SELECT query. For instance:\n\nOpen a new query tab (File -&gt; New Query Tab) in MySQL Workbench\nCopy the SQL statement below and paste it into the Query Tab\n\nSELECT * \nFROM campaigns;"
  },
  {
    "objectID": "sql.html#postgresql",
    "href": "sql.html#postgresql",
    "title": "SQL",
    "section": "PostgreSQL",
    "text": "PostgreSQL\nPostgreSQL (often pronounced ‚ÄúPost-gress-Q-L‚Äù) is an advanced, open-source relational database management system (RDBMS).\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall PostgreSQL\nDuring the installation process, select ‚ÄúPostgreSQL Server‚Äù, ‚ÄúpgAdmin4‚Äù and ‚ÄúCommand Line Tools‚Äù\nPassword: Provide a password (make sure to make a note - you can no longer change the password)\nPort: Use the suggested port\nLocale: Use [Default Locale]\n\n\n\n\nPgAdmin4\npgAdmin4 is a popular open-source administration and management tool for the PostgreSQL relational database (it has already been installed together with PostgreSQL).\n\nAdd New Server\nFirst, let‚Äôs create a new connection to a PostgreSQL database instance. We will call this instance local-connection.\nOnce added, this server will appear in your list of servers in pgAdmin4‚Äôs interface, allowing you to quickly connect, manage, and query that database instance.\n\nOpen pgAdmin4\nClick on Servers on the left sidebar\nSelect Add New Server (in the main window below ‚ÄúQuick Links‚Äù)\nProvide the name: local-connection\nMove to the tab Connection\n\nHost name/address: localhost\nPassword: enter the password you used during the installation process and choose ‚ÄúSave password‚Äù\n\nWe are done and you can select Save\n\n\n\n\nCreate a Database\nUse pgadmin4 to create a new database called db_data\n\nRight click on our new connection local-connection in the left sidebar and select: Create &gt; Database\nIn the tab ‚ÄúGeneral‚Äù, provide as ‚ÄúDatabase‚Äù: db_data\nWe are done and you can select Save\n\n\n\nCreate a Table\nNext, we include a table in our database.\n\nCreate a simple table\nWe‚Äôll begin by creating a table named campaigns that will hold data about different marketing campaigns.\n\n\n\n\n\n\nColumns in marketing campaigns table\n\n\n\n\n\n\nid: A unique identifier for each campaign.\nname: The name of the marketing campaign.\nstart_date & end_date: The time frame of the campaign.\nbudget: The budget allocated to the campaign.\nchannel: The channel used for the campaign (e.g., ‚ÄúEmail‚Äù, ‚ÄúSocial Media‚Äù, ‚ÄúTV‚Äù).\n\n\n\n\n\nClick on the database db_data\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nCREATE TABLE campaigns (\n    id BIGSERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10, 2),\n    channel VARCHAR(255)\n);\n\nClick on the ‚ñ∂Ô∏è symbol to execute the script\nSelect the database ‚Äúdb_data‚Äù at the left sidebar and expand ‚ÄúSchemas‚Äù &gt; ‚ÄúTables‚Äù &gt; ‚Äúcampaigns‚Äù &gt; ‚ÄúColumns‚Äù to view the columns of the table\n\n\n\nInsert values into the table\nLet‚Äôs now insert some sample marketing campaigns into our table:\n\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nINSERT INTO campaigns (name, start_date, end_date, budget, channel) VALUES\n('Winter Sale', '2023-12-01', '2023-12-31', 5000.00, 'Email'),\n('Summer Festival', '2023-06-01', '2023-06-15', 10000.00, 'Social Media'),\n('Back to School', '2023-08-01', '2023-08-20', 7500.00, 'TV');\n\nClick on the ‚ñ∂Ô∏è symbol to execute the script\n\n\n\nRetrieve values from the table\nAfter inserting the campaigns, you can retrieve them using a simple SELECT query. For instance:\n\nOpen a new query tab (Tools &gt; Query Tool) in pgAdmin4\nCopy the SQL statement below and paste it into the Query Tab\n\nSELECT * \nFROM campaigns;"
  },
  {
    "objectID": "cli.html",
    "href": "cli.html",
    "title": "Command-line",
    "section": "",
    "text": "Operating systems like Windows and macOS implement a command-line interface (other names for the command line are: cmd, CLI, prompt, console or terminal) in a shell for interactive access to operating system functions or services.\n\n\n\n\n\n\nTip\n\n\n\nA command-line interface (CLI) processes commands to a computer program in the form of lines of text.\n\n\nWe sometimes use the command line interface so you should be familiar with basic commands. If you aren‚Äôt familiar with the terminal, read this short introduction to the command-line interface:\n\n\n\n\n\n\nTo do\n\n\n\n\nIntroduction to the command-line interface\n\n\n\nHere is a summary of some useful commands:\n\n\n\n\n\n\n\n\n\nCommand (Windows)\nCommand (Mac OS / Linux)\nDescription\nExample\n\n\n\n\nexit\nexit\nclose the window\nexit\n\n\ncd\ncd\nchange directory\ncd test, cd.. (Windows) or cd .. (Mac)\n\n\ncd\npwd\nshow the current directory\ncd (Windows) or pwd (Mac OS / Linux)\n\n\ndir\nls\nlist directories/files\ndir\n\n\ncopy\ncp\ncopy file\ncopy c:.txt c:.txt\n\n\nmove\nmv\nmove file\nmove c:.txt c:.txt\n\n\nmkdir\nmkdir\ncreate a new directory\nmkdir testdirectory\n\n\nrmdir (or del)\nrm\ndelete a file\ndel c:.txt\n\n\nrmdir /S\nrm -r\ndelete a directory\nrm -r testdirectory\n\n\n[CMD] /?\nman [CMD]\nget help for a command\ncd /? (Windows) or man cd (Mac OS / Linux)"
  },
  {
    "objectID": "cli.html#basics",
    "href": "cli.html#basics",
    "title": "Command-line",
    "section": "",
    "text": "Operating systems like Windows and macOS implement a command-line interface (other names for the command line are: cmd, CLI, prompt, console or terminal) in a shell for interactive access to operating system functions or services.\n\n\n\n\n\n\nTip\n\n\n\nA command-line interface (CLI) processes commands to a computer program in the form of lines of text.\n\n\nWe sometimes use the command line interface so you should be familiar with basic commands. If you aren‚Äôt familiar with the terminal, read this short introduction to the command-line interface:\n\n\n\n\n\n\nTo do\n\n\n\n\nIntroduction to the command-line interface\n\n\n\nHere is a summary of some useful commands:\n\n\n\n\n\n\n\n\n\nCommand (Windows)\nCommand (Mac OS / Linux)\nDescription\nExample\n\n\n\n\nexit\nexit\nclose the window\nexit\n\n\ncd\ncd\nchange directory\ncd test, cd.. (Windows) or cd .. (Mac)\n\n\ncd\npwd\nshow the current directory\ncd (Windows) or pwd (Mac OS / Linux)\n\n\ndir\nls\nlist directories/files\ndir\n\n\ncopy\ncp\ncopy file\ncopy c:.txt c:.txt\n\n\nmove\nmv\nmove file\nmove c:.txt c:.txt\n\n\nmkdir\nmkdir\ncreate a new directory\nmkdir testdirectory\n\n\nrmdir (or del)\nrm\ndelete a file\ndel c:.txt\n\n\nrmdir /S\nrm -r\ndelete a directory\nrm -r testdirectory\n\n\n[CMD] /?\nman [CMD]\nget help for a command\ncd /? (Windows) or man cd (Mac OS / Linux)"
  },
  {
    "objectID": "python.html",
    "href": "python.html",
    "title": "Python",
    "section": "",
    "text": "Python is an object-oriented language (an object is an entity that contains data along with associated metadata and/or functionality).\nOne thing that distinguishes Python from many other programming languages is that it is interpreted rather than compiled. This means that it is executed line by line which is particular useful for data analysis, as well as the creation of interactive, executable documents like Jupyter Notebooks.\n\n\n\n\n\n\nNote\n\n\n\nPython is an interpreted language. The Python interpreter runs a program by executing one statement at a time.\n\n\nOn top of this, there is a broad ecosystem of third-party tools and modules (like Jupyter Notebook) that offer more specialized data science functionality."
  },
  {
    "objectID": "python.html#basics",
    "href": "python.html#basics",
    "title": "Python",
    "section": "",
    "text": "Python is an object-oriented language (an object is an entity that contains data along with associated metadata and/or functionality).\nOne thing that distinguishes Python from many other programming languages is that it is interpreted rather than compiled. This means that it is executed line by line which is particular useful for data analysis, as well as the creation of interactive, executable documents like Jupyter Notebooks.\n\n\n\n\n\n\nNote\n\n\n\nPython is an interpreted language. The Python interpreter runs a program by executing one statement at a time.\n\n\nOn top of this, there is a broad ecosystem of third-party tools and modules (like Jupyter Notebook) that offer more specialized data science functionality."
  },
  {
    "objectID": "python.html#jupyter-notebook",
    "href": "python.html#jupyter-notebook",
    "title": "Python",
    "section": "Jupyter Notebook",
    "text": "Jupyter Notebook\nJupyter Notebook is an open-source application that allows you to create and share documents that contain code, equations, visualizations and narrative text.\n\n\n\nA notebook is basically a list of cells and the cells contain either\n\nexplanatory text (written in markdown)\nexecutable code\ncode output\n\nNote that we will use Jupyter Notebook inside the coding editor Visual Studio Code or Google Colab."
  },
  {
    "objectID": "python.html#sec-colab",
    "href": "python.html#sec-colab",
    "title": "Python",
    "section": "Colab",
    "text": "Colab\nColaboratory, or ‚ÄúColab‚Äù for short, is a free to use product from Google Research. Colab allows anybody to write and execute python code through the browser, and is especially well suited to perform data analysis and machine learning.\n\n\n\n\n\n\nNote\n\n\n\nColab is a free Jupyter notebook environment that requires no setup, and runs entirely on the Cloud.\n\n\nWatch this video to get a first impression of Colab:\n\n\nLet`s start your first Colab notebook to get an overview about some basic features:\n\n\n\n\n\n\nTo do\n\n\n\n\nColab basic features overview"
  },
  {
    "objectID": "python.html#markdown",
    "href": "python.html#markdown",
    "title": "Python",
    "section": "Markdown",
    "text": "Markdown\nMarkdown is one of the world‚Äôs most popular markup languages used in data science. Jupyter Notebooks use Markdown to provide an unified authoring framework for data science, combining code, its results, and commentary in Markdown.\n\n\n\n\n\n\nNote\n\n\n\nMarkdown is a simple way to format text that looks great on any device.\n\n\nReview this sites to learn more about Markdown:\n\n\n\n\n\n\nTo do\n\n\n\n\nInteractive Colab Markdown guide\nInteractive 10 minute Markdown tutorial"
  },
  {
    "objectID": "python.html#sec-anaconda",
    "href": "python.html#sec-anaconda",
    "title": "Python",
    "section": "Anaconda",
    "text": "Anaconda\n\nBasics\nThe open-source Anaconda Distribution is one of the easiest ways to get started with data science projects. It already includes Python and the most important data science modules.\n\n\n\n\n\n\nNote\n\n\n\nAnaconda is a data science toolkit which already includes most of the data science modules we need.\n\n\nAnaconda‚Äôs package manager conda makes it easy to manage multiple data environments that can be maintained and run separately without interference from each other (in so called virtual environments).\n\n\n\n\n\n\nExpand to learn about conda\n\n\n\n\n\nconda analyses the current environment including everything currently installed, and, together with any version limitations specified (e.g.¬†the user may wish to have TensorFlow version 2.0 or higher), works out how to install a compatible set of dependencies, and shows a warning if this cannot be done.\n\n\n\nInstead of conda, you can also use pip (the standard package installer for Python) to install packages.\nNote that you should only use either conda or pip in one environment (we usually use pip).\n\n\nIf you already have Anaconda\nIf you already have Anaconda on your machine, make sure that you use the latest version (in our course, we use Python 3.11).\nIn your command line tool, type python --version to see which Python version you are using in your Anaconda base environment:\n\nOn Windows open the Start menu and open an ‚ÄúAnaconda Command Prompt‚Äù. Type python --version to see which Python version you are using in your Anaconda base environment.\nOn macOS or Linux open a terminal window. Type python --version to see which Python version you are using in your Anaconda base environment.\n\nYou may also uninstall your current Anaconda environment from your machine and install the latest version: here a guide of how to uninstall Anaconda.\n\n\nInstallation\nInstall the latest version of the Anaconda Distribution:\n\n\n\n\n\n\nTo do\n\n\n\n\nAnaconda installation\n\n\n\nAfter you have installed Anaconda, you can update it. The following commands will update all packages in the default ‚Äúbase‚Äù environment to the latest version but will not update Python:\n\n\n\n\n\n\nTo do\n\n\n\n\nOn Windows open the Start menu and open an ‚ÄúAnaconda Command Prompt‚Äù.\nOn macOS or Linux open a terminal window.\nIn your terminal, type: conda update --all\n\n\n\nNow follow the steps described in the next section.\n\n\nAnaconda environment\nAfter you have installed and updated Anaconda, you can install the modules you need for a specific lab in a new environment.\n\n\n\n\n\n\nTo do\n\n\n\n\nGo to GitHub course environments\nFollow the instructions in the GitHub repo and install the environment env-lab"
  },
  {
    "objectID": "python.html#sec-vscode",
    "href": "python.html#sec-vscode",
    "title": "Python",
    "section": "Visual Studio Code",
    "text": "Visual Studio Code\n\nBasics\nVisual Studio Code (also called Code) is a powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with a rich ecosystem of extensions for Python.\n\n\n\n\n\n\nNote\n\n\n\nVisual Studio Code is a code editor that can be used with a variety of programming languages including Python.\n\n\n\n\n\n\n\n\nInstallation\nInstall VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nInstall Code\n\n\n\n\n\nInstall extensions\nThe features that Visual Studio Code includes out-of-the-box are just the start. VS Code extensions let you add languages, debuggers, and tools to your installation to support your development workflow.\nLet‚Äôs install some important extensions:\n\n\n\n\n\n\nTo do\n\n\n\n\nVisual Studio Code Extensions\n\n\n\n\n\nJupyter Notebooks\nWe usually work with Jupyter Notebook files in VS Code:\n\n\n\n\n\n\nTo do\n\n\n\n\nLearn how to use Jupyter Notebooks in VS Code\n\n\n\nTo use a specific Anaconda environment as Jupyter kernel, select the kernel (e.g.¬†lab) using the kernel picker in the top right of VS Code.\n\n\nOptional tutorials\nSome resources to get familiar with VS Code:\n\nTake a look at the intro videos\nData Science in VS Code tutorial\nPro tips: 25 VS Code Productivity Tips and Speed Hacks"
  },
  {
    "objectID": "python.html#working-environment",
    "href": "python.html#working-environment",
    "title": "Python",
    "section": "Working environment",
    "text": "Working environment\n\nFolder structure\nBefore you start a lab, you should always first create a new folder on your machine with the name of the lab (e.g.¬†clustering). Here, we create a parent directory called ‚Äúlabs‚Äù where we can store the different labs.\nBelow is a tutorial on how to create a new folder called ‚Äúlabs‚Äù using the command line interface for both Windows and macOS.\n\nWindows\n\nPress Windows + R keys simultaneously to open the Run dialog.\nType cmd and press Enter to open the Command Prompt.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example (replace YourUsername and \\your\\path):\ncd C:\\Users\\YourUsername\\your\\path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs\n\n\nmacOS/Linux\n\nOpen the Terminal application. You can find it in the Applications &gt; Utilities folder or search for it using Spotlight.\nNavigate to the directory where you want to create the new folder using the cd (change directory) command.\n\nFor example For example (replace YourUsername and /your/path):\ncd /Users/YourUsername/your/path\n\nOnce you are in the desired directory, create a new folder named ‚Äúlabs‚Äù using the following command:\n\nmkdir labs\n\n\n\nEnvironment file\nIn most labs we need to access a database or an API. Since we do not want to include passwords and API-keys in our Python scripts, we need to create an environment (‚Äúenv‚Äù) file. A .env file is a simple configuration file where environment-specific settings, such as database credentials or API keys, are stored in key-value pairs.\nBy separating these settings from the main application code, we can ensure that sensitive or environment-specific information is both easily configurable and not inadvertently shared or published. The . before a filename serves a specific purpose in many operating systems: A filename that starts with a . is considered a ‚Äúhidden‚Äù file.\n\n\n\n\n\n\nNote\n\n\n\nWe will use libraries like python-dotenv to load the variables from the file into our Python script automatically.\n\n\nBelow are tutorials on how to create a .env file.\n\nmacOS\n\nDownload the env file template\nOpen Finder and navigate to the ‚ÄúDownloads‚Äù folder\nMove the file in your ‚Äúlabs‚Äù folder.\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view hidden files, you need to press the ‚ÄúCommand‚Äù + ‚ÄúShift‚Äù + ‚Äú.‚Äù (period) keys at the same time. The hidden files will show up as translucent in the folder.\nIf you want to obscure the files again, press the same ‚ÄúCommand‚Äù + ‚ÄúShift‚Äù + ‚Äú.‚Äù (period) combination.\n\n\n\nWindows 10\n\nDownload the env file template\nOpen File Explorer from the taskbar.\nMove the file in your ‚Äúlabs‚Äù folder.\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Options &gt; Change folder and search options.\nSelect the View tab and, in Advanced settings, select Show hidden files, folders, and drives and OK.\n\n\n\nWindows 11\n\nDownload the env file template\nOpen File Explorer from the taskbar.\nMove the file in your ‚Äúlabs‚Äù folder.\nOpen the file and replace the relevant placeholder (e.g.¬†YOUR-PASSWORD).\nSave the changes.\nRename the file from env to .env (this will hide the file)\nTo view the hidden file: Select View &gt; Show &gt; Hidden items."
  },
  {
    "objectID": "slides/slides.html#jump-to-slides",
    "href": "slides/slides.html#jump-to-slides",
    "title": "Slides",
    "section": "Jump to slides",
    "text": "Jump to slides\n\nClicking the button (or press m) opens a slide navigation menu that enables you to easily jump to any slide"
  },
  {
    "objectID": "slides/slides.html#zoom-into-slide",
    "href": "slides/slides.html#zoom-into-slide",
    "title": "Slides",
    "section": "Zoom into slide",
    "text": "Zoom into slide\n\nHold down the Alt key (or Ctrl) and click on any element to zoom towards it."
  },
  {
    "objectID": "slides/slides.html#chalkboard-and-notes-canvas",
    "href": "slides/slides.html#chalkboard-and-notes-canvas",
    "title": "Slides",
    "section": "Chalkboard and notes canvas",
    "text": "Chalkboard and notes canvas\n\nPress b to toggle the chalkboard.\nPress c to toggle the notes canvas.\n\n\n\nJan Kirenz"
  }
]